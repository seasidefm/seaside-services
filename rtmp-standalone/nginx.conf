# How many workers to use. (Number of CPU's)
# Set to auto is best, but for the rtmp stats can only be read from one worker
# https://github.com/arut/nginx-patches
worker_processes auto;

# used to set global options that affect how Nginx handles connections at a general level
events {
    worker_connections 10000;
}
# NOTE: Can handle worker_processes * worker_connection  = clients servable 

http {
    # See http://licson.net/post/optimizing-nginx-for-large-file-delivery/ for more detail
    # This optimizes the server for HLS fragment delivery
    sendfile off;
    tcp_nopush on;
    directio 512;

    # HTTP Server for the video fragments
    server {
        listen 8080;

        location /control {
            rtmp_control all;
        }

        location /hls {

            types {
                application/vnd.apple.mpegurl m3u8;
            }

            root /tmp/;

            add_header 'Cache-Control' 'no-cache';
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
            add_header 'Access-Control-Allow-Headers' 'Range';
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Headers' 'Range';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        }
    }
}

rtmp {
    server {
        listen 1935; # port listening to incoming stream
        chunk_size 4096; # Maximum chunk size for stream multiplexing. Default is 4096. The bigger this value the lower CPU overhead.

        # This application is to accept incoming stream
        application live {
            live on; # Allows live input

            # Validate livestreams so randos don't start publishing
            on_publish http://seaside-rtmp-auth:8081/publish;
  		    on_publish_done http://seaside-rtmp-auth:8081/unpublish;

            # ffmpeg (potential resolutions 426x240, 640x360, 854x480, 1280x720, 1920x1080)
            # We are not degrading audio-quality here only video.
            exec ffmpeg -i rtmp://localhost/live/$name
              # To enable/disable more qualities adjust the ; and comment/uncomment below
              -c:v libx264 -x264opts keyint=60:no-scenecut -b:v 125k -c:a copy -s 426x240 -r 30 -sws_flags bilinear -tune zerolatency -preset veryfast -f flv rtmp://localhost/show/$name_subsd
              -c:v libx264 -x264opts keyint=60:no-scenecut -b:v 450k -c:a copy -s 854x480 -r 30 -sws_flags bilinear -tune zerolatency -preset veryfast -f flv rtmp://localhost/show/$name_sd
              -c:v libx264 -x264opts keyint=60:no-scenecut -c:a copy -tune zerolatency -preset veryfast -f flv rtmp://localhost/show/$name_hd;
        }

        # This application is for splitting the stream into HLS fragments
        application show {
            live on; # Allows live input from above
            hls on; # Enable HTTP Live Streaming
            hls_type live; # Either 'event' or 'live' (live means played from current live position)
            deny play all; # Disable consuming the stream from nginx as rtmp

            hls_fragment 4s;
            hls_playlist_length 8s;

            # Pointing this to an SSD is better as this involves lots of IO
            hls_path /tmp/hls/;
            
            # Instruct clients to adjust resolution according to bandwidth
            hls_variant _subsd BANDWIDTH=400000;
            hls_variant _sd BANDWIDTH=1000000;
            hls_variant _hd BANDWIDTH=5000000;
        }
    }
}
